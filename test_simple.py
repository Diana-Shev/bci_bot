#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

def test_imports():
    """–¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–æ–≤ –º–æ–¥—É–ª–µ–π"""
    try:
        from app.models import User, Metric, ProductivityPeriod, DailyRecommendation, ImprovementSuggestion
        print("‚úÖ –ò–º–ø–æ—Ä—Ç –º–æ–¥–µ–ª–µ–π —É—Å–ø–µ—à–µ–Ω")
        
        from app.config import settings
        print("‚úÖ –ò–º–ø–æ—Ä—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —É—Å–ø–µ—à–µ–Ω")
        
        from app.crud import get_or_create_user, save_metrics_bulk
        print("‚úÖ –ò–º–ø–æ—Ä—Ç CRUD –æ–ø–µ—Ä–∞—Ü–∏–π —É—Å–ø–µ—à–µ–Ω")
        
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        return False

def test_models():
    """–¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ –º–æ–¥–µ–ª–µ–π"""
    try:
        from app.models import User, Metric, ProductivityPeriod, DailyRecommendation, ImprovementSuggestion
        
        # –¢–µ—Å—Ç User
        user = User(
            telegram_id=12345,
            username="test_user",
            name="Test User",
            email="test@example.com"
        )
        print("‚úÖ –ú–æ–¥–µ–ª—å User —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
        
        # –¢–µ—Å—Ç Metric
        metric = Metric(
            user_id=1,
            metric_name="test_metric",
            metric_value=85.5
        )
        print("‚úÖ –ú–æ–¥–µ–ª—å Metric —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
        
        # –¢–µ—Å—Ç ProductivityPeriod
        from datetime import time
        period = ProductivityPeriod(
            user_id=1,
            start_time=time(9, 0),
            end_time=time(12, 0),
            productivity_score=90.0,
            recommended_activity="coding"
        )
        print("‚úÖ –ú–æ–¥–µ–ª—å ProductivityPeriod —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
        
        # –¢–µ—Å—Ç DailyRecommendation
        from datetime import date
        rec = DailyRecommendation(
            user_id=1,
            date=date.today(),
            recommendation_text="Test recommendation"
        )
        print("‚úÖ –ú–æ–¥–µ–ª—å DailyRecommendation —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
        
        # –¢–µ—Å—Ç ImprovementSuggestion
        suggestion = ImprovementSuggestion(
            user_id=1,
            suggestion_text="Test suggestion"
        )
        print("‚úÖ –ú–æ–¥–µ–ª—å ImprovementSuggestion —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
        
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –º–æ–¥–µ–ª–µ–π: {e}")
        return False

def test_config():
    """–¢–µ—Å—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    try:
        from app.config import settings
        
        print(f"‚úÖ BOT_TOKEN: {settings.BOT_TOKEN}")
        print(f"‚úÖ DATABASE_URL: {settings.DATABASE_URL}")
        print(f"‚úÖ DEEPSEEK_API_KEY: {settings.DEEPSEEK_API_KEY}")
        print(f"‚úÖ DOWNLOADS_DIR: {settings.DOWNLOADS_DIR}")
        
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤...")
    print("=" * 50)
    
    tests = [
        ("–¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–æ–≤", test_imports),
        ("–¢–µ—Å—Ç –º–æ–¥–µ–ª–µ–π", test_models),
        ("–¢–µ—Å—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏", test_config)
    ]
    
    passed = 0
    total = len(tests)
    
    for test_name, test_func in tests:
        print(f"\nüß™ {test_name}:")
        if test_func():
            passed += 1
        print()
    
    print("=" * 50)
    print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã: {passed}/{total} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ")
    
    if passed == total:
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        return 0
    else:
        print("‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏")
        return 1

if __name__ == "__main__":
    exit(main())

